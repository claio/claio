# NATS jetstream server (single)
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: nats
  name: nats
  namespace: claio-system
spec:
  podManagementPolicy: Parallel
  replicas: 1
  selector:
    matchLabels:
      app: nats
  serviceName: nats-headless
  template:
    metadata:
      labels:
        app: nats
    spec:
      containers:
      - name: nats
        args:
          - --config
          - /etc/nats-config/nats.conf
        env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: SERVER_NAME
            value: $(POD_NAME)
        image: nats:2.10.22-alpine
        lifecycle:
          preStop:
            exec:
              command:
              - nats-server
              - -sl=ldm=/var/run/nats/nats.pid
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz?js-enabled-only=true
            port: monitor
          initialDelaySeconds: 10
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5        
        ports:
          - containerPort: 4222
            name: nats
          - containerPort: 6222
            name: cluster
          - containerPort: 8222
            name: monitor
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz?js-server-only=true
            port: monitor
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        startupProbe:
          failureThreshold: 90
          httpGet:
            path: /healthz
            port: monitor
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        volumeMounts:
          - mountPath: /etc/nats-config
            name: config
          - mountPath: /var/run/nats
            name: pid
          - mountPath: /data
            name: nats-js
      enableServiceLinks: false
      shareProcessNamespace: true
      volumes:
        - name: config
          secret:
            secretName: nats
        - emptyDir: {}
          name: pid
        - name: nats-js
          emptyDir: {}
---
# nats-box (nats client)
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: nats-box
  name: nats-box
  namespace: claio-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nats-box
  template:
    metadata:
      labels:
        app: nats-box
    spec:
      containers:
      - name: nats-box
        image: natsio/nats-box:0.14.5
        command:
          - sh
          - -ec
          - |
            work_dir="$(pwd)"
            mkdir -p "$XDG_CONFIG_HOME/nats"
            cd "$XDG_CONFIG_HOME/nats"
            if ! [ -s context ]; then
              ln -s /etc/nats-contexts context
            fi
            if ! [ -f context.txt ]; then
              echo -n "default" > context.txt
            fi
            cd "$work_dir"
            exec /entrypoint.sh "$@"
          - --        
        args:
          - sh
          - -ec
          - trap true INT TERM; sleep infinity & wait
---
# nats service
apiVersion: v1
kind: Service
metadata:
  labels:
    app: nats
  name: nats
  namespace: claio-system
spec:
  ports:
  - appProtocol: tcp
    name: nats
    port: 4222
    targetPort: nats
  selector:
    app: nats
---
# secrets (dev not realy secret ;-)
apiVersion: v1
kind: Secret
metadata:
  labels:
    app: nats
  name: nats
  namespace: claio-system
stringData:
  nats.conf: |
    {
      "http_port": 8222,
      "jetstream": {
        "max_file_store": 10Gi,
        "max_memory_store": 0,
        "store_dir": "/data"
      },
      "lame_duck_duration": "30s",
      "lame_duck_grace_period": "10s",
      "pid_file": "/var/run/nats/nats.pid",
      "port": 4222,
      "server_name": $SERVER_NAME,
      "accounts": {
        "$SYS": {
          "users": [
            {
              "user": "system",
              "password": "ezQOdkulJeOmXfPRboo0"
            }
          ]
        }
      }
    }